CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
project(GravityAssistMFD C CXX)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")

OPTION(BUILD_STATIC "Build the executable with static linkage" OFF)

if (WIN32)
SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SAFESEH:NO")
SET (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /SAFESEH:NO")
SET (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /SAFESEH:NO")
endif()

SET(BUILD_SHARED_LIBS YES)
SET (LIB_TYPE STATIC)

SET (${PROJECT_NAME}_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET (${PROJECT_NAME}_BIN_DIR ${CMAKE_CURRENT_BINARY_DIR})
SET (${PROJECT_NAME}_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
SET (${PROJECT_NAME}_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libs)
SET (${PROJECT_NAME}_ORBITER_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../lib)

file(GLOB ${PROJECT_NAME}_SRCS
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.cpp"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.cpp"
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.cc"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.cc"
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.c"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.c"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.rc"
)

file(GLOB ${PROJECT_NAME}_INCL
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.h"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.h"
  "${${PROJECT_NAME}_INCLUDE_DIR}/**/*.h"
  "${${PROJECT_NAME}_INCLUDE_DIR}/**/*.hpp"
  "${${PROJECT_NAME}_INCLUDE_DIR}/*.h"
  "${${PROJECT_NAME}_INCLUDE_DIR}/*.hpp"
)

file(GLOB ${PROJECT_NAME}_LIBS
   "${CMAKE_CURRENT_SOURCE_DIR}/libs/*.lib"
   "${CMAKE_CURRENT_SOURCE_DIR}/libs/*.a"
)

file(GLOB ${PROJECT_NAME}_ORBITER_LIBS
   "${CMAKE_CURRENT_SOURCE_DIR}/../lib/*.lib"
)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../include)
INCLUDE_DIRECTORIES(${${PROJECT_NAME}_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${${PROJECT_NAME}_BIN_DIR})

LINK_DIRECTORIES(${${PROJECT_NAME}_LIB_DIR})
LINK_DIRECTORIES(${${PROJECT_NAME}_ORBITER_LIB_DIR})

add_library(${PROJECT_NAME} SHARED ${${PROJECT_NAME}_SRCS})

SET_TARGET_PROPERTIES (${PROJECT_NAME} PROPERTIES LINK_FLAG "/SAFESH:NO" )

TARGET_LINK_LIBRARIES(${PROJECT_NAME}
    "-Wl,--whole-archive"
    ${${PROJECT_NAME}_LIBS}
    "-Wl,--no-whole-archive"
    comctl32.lib
    ${${PROJECT_NAME}_ORBITER_LIBS}
)

INSTALL(TARGETS ${PROJECT_NAME} ARCHIVE DESTINATION ${CMAKE_CURRENT_SOURCE_DIR}/../../Modules/Plugin/)
