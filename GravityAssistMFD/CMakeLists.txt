CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
project(GravityAssistMFD C CXX)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/cmake/")

INCLUDE(FindProtobuf)
FIND_PACKAGE(Protobuf REQUIRED)
FIND_PACKAGE(ProtobufC REQUIRED)
# add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../orbiterkep-lib/src/proto ${CMAKE_CURRENT_BINARY_DIR}/src/proto)

INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIR})

SET(ORBITER_ADDON_STAGING "${CMAKE_CURRENT_BINARY_DIR}/dist" CACHE PATH "The install location of the ready-to-deploy plugin")
SET(ORBITER_DIR "D:/Installed Games/Orbiter-JGSME" CACHE PATH "Orbiter installation directory")
SET(LIBRARY_LOCATION "C:/PyKEP/usr/local" CACHE PATH "The location of the needed libraries")

if (WIN32)
  SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SAFESEH:NO /NODEFAULTLIB:library")
  SET (CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /SAFESEH:NO /NODEFAULTLIB:library")
  SET (CMAKE_MODULE_LINKER_FLAGS "${CMAKE_MODULE_LINKER_FLAGS} /SAFESEH:NO /NODEFAULTLIB:library")
endif()

#SET(BUILD_SHARED_LIBS YES)
#SET (LIB_TYPE SHARED)

SET (${PROJECT_NAME}_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
SET (${PROJECT_NAME}_BIN_DIR ${CMAKE_CURRENT_BINARY_DIR})
SET (${PROJECT_NAME}_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
SET (${PROJECT_NAME}_LIB_DIR ${CMAKE_CURRENT_SOURCE_DIR}/libs)
SET (${PROJECT_NAME}_ORBITER_LIB_DIR ${ORBITER_DIR}/Orbitersdk/lib)
SET (${PROJECT_NAME}_ORBITER_INCLUDE_DIR ${ORBITER_DIR}/Orbitersdk/include)
SET (${PROJECT_NAME}_INSTALL_DIR ${ORBITER_DIR})

file(GLOB ${PROJECT_NAME}_SRCS
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.cpp"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.cpp"
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.cc"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.cc"
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.c"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.c"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.rc"
)

file(GLOB ${PROJECT_NAME}_INCL
  "${${PROJECT_NAME}_SOURCE_DIR}/**/*.h"
  "${${PROJECT_NAME}_SOURCE_DIR}/*.h"
  "${${PROJECT_NAME}_BINARY_DIR}/**/*.h"
  "${${PROJECT_NAME}_BINARY_DIR}/*.h"
  "${${PROJECT_NAME}_INCLUDE_DIR}/**/*.h"
  "${${PROJECT_NAME}_INCLUDE_DIR}/**/*.hpp"
  "${${PROJECT_NAME}_INCLUDE_DIR}/*.h"
  "${${PROJECT_NAME}_INCLUDE_DIR}/*.hpp"
)

SET(${PROJECT_NAME}_SHARED_LIBS
   "${LIBRARY_LOCATION}/lib/libkeplerian_toolbox.dll"
   "${LIBRARY_LOCATION}/lib/libpagmo.dll"
   "${LIBRARY_LOCATION}/lib/liborbiterkep-lib.dll"
   "${LIBRARY_LOCATION}/lib/liborbiterkep-proto.dll"
)

SET(${PROJECT_NAME}_LIBS
   "${LIBRARY_LOCATION}/lib/libkeplerian_toolbox.a"
   "${LIBRARY_LOCATION}/lib/libpagmo.a"
   "${LIBRARY_LOCATION}/lib/liborbiterkep-lib.dll.a"
   "${LIBRARY_LOCATION}/lib/orbiterkep-proto-c.lib"
   "${LIBRARY_LOCATION}/lib/orbiterkep-proto.lib"
)

file(GLOB ${PROJECT_NAME}_BOOST_LIBS
   "${LIBRARY_LOCATION}/lib/libboost*serialization*mgw*.dll"
   "${LIBRARY_LOCATION}/lib/libboost*date_time*mgw*.dll"
   "${LIBRARY_LOCATION}/lib/libboost*system*mgw*.dll"
   "${LIBRARY_LOCATION}/lib/libboost*thread*mgw*.dll"
)

file(GLOB ${PROJECT_NAME}_ORBITER_LIBS
   "${${PROJECT_NAME}_ORBITER_LIB_DIR}/*.a"
   "${${PROJECT_NAME}_ORBITER_LIB_DIR}/**/*.a"
   "${${PROJECT_NAME}_ORBITER_LIB_DIR}/*.lib"
   "${${PROJECT_NAME}_ORBITER_LIB_DIR}/**/*.lib"
)

SET(BOOST_LIBRARYDIR ${LIBRARY_LOCATION}/lib)
SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED ON)
find_package(Boost REQUIRED COMPONENTS filesystem system serialization iostreams thread)

INCLUDE_DIRECTORIES(${orbiterkep-proto_INCLUDES})

INCLUDE_DIRECTORIES(${${PROJECT_NAME}_ORBITER_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${LIBRARY_LOCATION}/include)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})

INCLUDE_DIRECTORIES(${${PROJECT_NAME}_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${${PROJECT_NAME}_BIN_DIR})

LINK_DIRECTORIES(${${PROJECT_NAME}_LIB_DIR})
LINK_DIRECTORIES(${${PROJECT_NAME}_ORBITER_LIB_DIR})
LINK_DIRECTORIES(${LIBRARY_LOCATION}/lib)

add_library(${PROJECT_NAME} SHARED ${${PROJECT_NAME}_SRCS} ${${PROJECT_NAME}_INCL})

SET_TARGET_PROPERTIES (${PROJECT_NAME} PROPERTIES LINK_FLAG "/SAFESH:NO /NODEFAULTLIB:library" )

# Protobuf

TARGET_LINK_LIBRARIES(${PROJECT_NAME} orbiterkep-proto-c orbiterkep-proto)

TARGET_LINK_LIBRARIES(${PROJECT_NAME}
    comctl32.lib
    ${${PROJECT_NAME}_LIBS}
    ${Boost_LIBRARIES}
    ${PROTOBUF_LIBRARIES}
    ${PROTOBUFC_LIBRARIES}
    ${${PROJECT_NAME}_ORBITER_LIBS}
)

configure_file(${PROJECT_NAME}.vcxproj.user.in ${CMAKE_BINARY_DIR}/${PROJECT_NAME}.vcxproj.user @ONLY)

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${ORBITER_ADDON_STAGING}/Modules/Plugin/)
INSTALL(FILES ${${PROJECT_NAME}_SHARED_LIBS} DESTINATION ${ORBITER_ADDON_STAGING}/Modules/)
INSTALL(FILES ${${PROJECT_NAME}_BOOST_LIBS} DESTINATION ${ORBITER_ADDON_STAGING}/Modules/)

INSTALL(DIRECTORY ${ORBITER_ADDON_STAGING}/ DESTINATION ${ORBITER_DIR})

configure_file(${PROJECT_NAME}.vcxproj.user.in ${CMAKE_BINARY_DIR}/INSTALL.vcxproj.user @ONLY)
