INCLUDE(FindProtobuf)
FIND_PACKAGE(Protobuf REQUIRED)
FIND_PACKAGE(ProtobufC REQUIRED)

INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PROTOBUFC_INCLUDE_DIRS})

PROTOBUF_GENERATE_CPP(PROTO_SRC PROTO_HEADER solution.proto parameters.proto)
PROTOC(PARAMETERSC_SRC parameters.proto)
PROTOC(SOLUTIONC_SRC solution.proto)

SET(PROTOBUFC_SRC ${PARAMETERSC_SRC} ${SOLUTIONC_SRC})

SET(PROTO_SRC ${PROTO_SRC} ${PROTOBUFC_SRC})
SET(PROTO_HEADER ${PROTO_HEADER} ${PROTOBUFC_HEADER})

IF(BUILD_STATIC)
  UNSET(PROTOBUF_LIBRARY CACHE)

  find_library(PROTO_STATIC NAMES libprotobuf.a
    PATHS ${CMAKE_INSTALL_PREFIX}
    PATH_SUFFIXES lib
    NO_DEFAULT_PATHS
    )

  SET(PROTOBUF_LIBRARY ${PROTO_STATIC})
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/..)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/..)

ADD_LIBRARY(orbiterkep-proto STATIC ${PROTO_HEADER} ${PROTO_SRC})
TARGET_LINK_LIBRARIES(orbiterkep-proto ${PROTOBUF_LIBRARY} ${PROTOBUFC_LIBRARIES})

SET(orbiterkep-proto_INCLUDES ${PROTO_HEADER}
                              ${PROTOBUFC_INCLUDE_DIRS}
                              ${CMAKE_CURRENT_SOURCE_DIR}/..
                              CACHE INTERNAL "orbiterkep-proto: Headers" FORCE)

INSTALL(TARGETS orbiterkep-proto DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
INSTALL(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/
  DESTINATION ${CMAKE_INSTALL_PREFIX}/include/orbiterkep/proto
  FILES_MATCHING PATTERN "*.h")
