/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto/solution.proto */

#ifndef PROTOBUF_C_proto_2fsolution_2eproto__INCLUDED
#define PROTOBUF_C_proto_2fsolution_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Pagmo__Problem__TransXTimes Pagmo__Problem__TransXTimes;
typedef struct _Pagmo__Problem__TransXEscape Pagmo__Problem__TransXEscape;
typedef struct _Pagmo__Problem__TransXDSM Pagmo__Problem__TransXDSM;
typedef struct _Pagmo__Problem__TransXFlyBy Pagmo__Problem__TransXFlyBy;
typedef struct _Pagmo__Problem__TransXArrival Pagmo__Problem__TransXArrival;
typedef struct _Pagmo__Problem__TransXSolution Pagmo__Problem__TransXSolution;


/* --- enums --- */


/* --- messages --- */

struct  _Pagmo__Problem__TransXTimes
{
  ProtobufCMessage base;
  size_t n_planets;
  char **planets;
  size_t n_times;
  double *times;
};
#define PAGMO__PROBLEM__TRANS_XTIMES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pagmo__problem__trans_xtimes__descriptor) \
    , 0,NULL, 0,NULL }


struct  _Pagmo__Problem__TransXEscape
{
  ProtobufCMessage base;
  double mjd;
  double vinf;
  double burn;
  double prograde;
  double outward;
  double plane;
  char *planet;
};
#define PAGMO__PROBLEM__TRANS_XESCAPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pagmo__problem__trans_xescape__descriptor) \
    , 0, 0, 0, 0, 0, 0, NULL }


struct  _Pagmo__Problem__TransXDSM
{
  ProtobufCMessage base;
  double mjd;
  double vinf;
  double burn;
  double prograde;
  double outward;
  double plane;
};
#define PAGMO__PROBLEM__TRANS_XDSM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pagmo__problem__trans_xdsm__descriptor) \
    , 0, 0, 0, 0, 0, 0 }


struct  _Pagmo__Problem__TransXFlyBy
{
  ProtobufCMessage base;
  double mjd;
  double burn;
  double prograde;
  double outward;
  double plane;
  double approach_vel;
  double departure_vel;
  double outward_angle;
  double inclination;
  double turning_angle;
  double periapsis_altitude;
  char *planet;
};
#define PAGMO__PROBLEM__TRANS_XFLY_BY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pagmo__problem__trans_xfly_by__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, NULL }


struct  _Pagmo__Problem__TransXArrival
{
  ProtobufCMessage base;
  double mjd;
  double vinf;
  double burn;
  char *planet;
};
#define PAGMO__PROBLEM__TRANS_XARRIVAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pagmo__problem__trans_xarrival__descriptor) \
    , 0, 0, 0, NULL }


struct  _Pagmo__Problem__TransXSolution
{
  ProtobufCMessage base;
  size_t n_x;
  double *x;
  char *problem;
  double fuel_cost;
  Pagmo__Problem__TransXTimes *times;
  Pagmo__Problem__TransXEscape *escape;
  size_t n_dsms;
  Pagmo__Problem__TransXDSM **dsms;
  size_t n_flybyes;
  Pagmo__Problem__TransXFlyBy **flybyes;
  Pagmo__Problem__TransXArrival *arrival;
};
#define PAGMO__PROBLEM__TRANS_XSOLUTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&pagmo__problem__trans_xsolution__descriptor) \
    , 0,NULL, NULL, 0, NULL, NULL, 0,NULL, 0,NULL, NULL }


/* Pagmo__Problem__TransXTimes methods */
void   pagmo__problem__trans_xtimes__init
                     (Pagmo__Problem__TransXTimes         *message);
size_t pagmo__problem__trans_xtimes__get_packed_size
                     (const Pagmo__Problem__TransXTimes   *message);
size_t pagmo__problem__trans_xtimes__pack
                     (const Pagmo__Problem__TransXTimes   *message,
                      uint8_t             *out);
size_t pagmo__problem__trans_xtimes__pack_to_buffer
                     (const Pagmo__Problem__TransXTimes   *message,
                      ProtobufCBuffer     *buffer);
Pagmo__Problem__TransXTimes *
       pagmo__problem__trans_xtimes__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pagmo__problem__trans_xtimes__free_unpacked
                     (Pagmo__Problem__TransXTimes *message,
                      ProtobufCAllocator *allocator);
/* Pagmo__Problem__TransXEscape methods */
void   pagmo__problem__trans_xescape__init
                     (Pagmo__Problem__TransXEscape         *message);
size_t pagmo__problem__trans_xescape__get_packed_size
                     (const Pagmo__Problem__TransXEscape   *message);
size_t pagmo__problem__trans_xescape__pack
                     (const Pagmo__Problem__TransXEscape   *message,
                      uint8_t             *out);
size_t pagmo__problem__trans_xescape__pack_to_buffer
                     (const Pagmo__Problem__TransXEscape   *message,
                      ProtobufCBuffer     *buffer);
Pagmo__Problem__TransXEscape *
       pagmo__problem__trans_xescape__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pagmo__problem__trans_xescape__free_unpacked
                     (Pagmo__Problem__TransXEscape *message,
                      ProtobufCAllocator *allocator);
/* Pagmo__Problem__TransXDSM methods */
void   pagmo__problem__trans_xdsm__init
                     (Pagmo__Problem__TransXDSM         *message);
size_t pagmo__problem__trans_xdsm__get_packed_size
                     (const Pagmo__Problem__TransXDSM   *message);
size_t pagmo__problem__trans_xdsm__pack
                     (const Pagmo__Problem__TransXDSM   *message,
                      uint8_t             *out);
size_t pagmo__problem__trans_xdsm__pack_to_buffer
                     (const Pagmo__Problem__TransXDSM   *message,
                      ProtobufCBuffer     *buffer);
Pagmo__Problem__TransXDSM *
       pagmo__problem__trans_xdsm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pagmo__problem__trans_xdsm__free_unpacked
                     (Pagmo__Problem__TransXDSM *message,
                      ProtobufCAllocator *allocator);
/* Pagmo__Problem__TransXFlyBy methods */
void   pagmo__problem__trans_xfly_by__init
                     (Pagmo__Problem__TransXFlyBy         *message);
size_t pagmo__problem__trans_xfly_by__get_packed_size
                     (const Pagmo__Problem__TransXFlyBy   *message);
size_t pagmo__problem__trans_xfly_by__pack
                     (const Pagmo__Problem__TransXFlyBy   *message,
                      uint8_t             *out);
size_t pagmo__problem__trans_xfly_by__pack_to_buffer
                     (const Pagmo__Problem__TransXFlyBy   *message,
                      ProtobufCBuffer     *buffer);
Pagmo__Problem__TransXFlyBy *
       pagmo__problem__trans_xfly_by__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pagmo__problem__trans_xfly_by__free_unpacked
                     (Pagmo__Problem__TransXFlyBy *message,
                      ProtobufCAllocator *allocator);
/* Pagmo__Problem__TransXArrival methods */
void   pagmo__problem__trans_xarrival__init
                     (Pagmo__Problem__TransXArrival         *message);
size_t pagmo__problem__trans_xarrival__get_packed_size
                     (const Pagmo__Problem__TransXArrival   *message);
size_t pagmo__problem__trans_xarrival__pack
                     (const Pagmo__Problem__TransXArrival   *message,
                      uint8_t             *out);
size_t pagmo__problem__trans_xarrival__pack_to_buffer
                     (const Pagmo__Problem__TransXArrival   *message,
                      ProtobufCBuffer     *buffer);
Pagmo__Problem__TransXArrival *
       pagmo__problem__trans_xarrival__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pagmo__problem__trans_xarrival__free_unpacked
                     (Pagmo__Problem__TransXArrival *message,
                      ProtobufCAllocator *allocator);
/* Pagmo__Problem__TransXSolution methods */
void   pagmo__problem__trans_xsolution__init
                     (Pagmo__Problem__TransXSolution         *message);
size_t pagmo__problem__trans_xsolution__get_packed_size
                     (const Pagmo__Problem__TransXSolution   *message);
size_t pagmo__problem__trans_xsolution__pack
                     (const Pagmo__Problem__TransXSolution   *message,
                      uint8_t             *out);
size_t pagmo__problem__trans_xsolution__pack_to_buffer
                     (const Pagmo__Problem__TransXSolution   *message,
                      ProtobufCBuffer     *buffer);
Pagmo__Problem__TransXSolution *
       pagmo__problem__trans_xsolution__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   pagmo__problem__trans_xsolution__free_unpacked
                     (Pagmo__Problem__TransXSolution *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Pagmo__Problem__TransXTimes_Closure)
                 (const Pagmo__Problem__TransXTimes *message,
                  void *closure_data);
typedef void (*Pagmo__Problem__TransXEscape_Closure)
                 (const Pagmo__Problem__TransXEscape *message,
                  void *closure_data);
typedef void (*Pagmo__Problem__TransXDSM_Closure)
                 (const Pagmo__Problem__TransXDSM *message,
                  void *closure_data);
typedef void (*Pagmo__Problem__TransXFlyBy_Closure)
                 (const Pagmo__Problem__TransXFlyBy *message,
                  void *closure_data);
typedef void (*Pagmo__Problem__TransXArrival_Closure)
                 (const Pagmo__Problem__TransXArrival *message,
                  void *closure_data);
typedef void (*Pagmo__Problem__TransXSolution_Closure)
                 (const Pagmo__Problem__TransXSolution *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor pagmo__problem__trans_xtimes__descriptor;
extern const ProtobufCMessageDescriptor pagmo__problem__trans_xescape__descriptor;
extern const ProtobufCMessageDescriptor pagmo__problem__trans_xdsm__descriptor;
extern const ProtobufCMessageDescriptor pagmo__problem__trans_xfly_by__descriptor;
extern const ProtobufCMessageDescriptor pagmo__problem__trans_xarrival__descriptor;
extern const ProtobufCMessageDescriptor pagmo__problem__trans_xsolution__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_proto_2fsolution_2eproto__INCLUDED */
